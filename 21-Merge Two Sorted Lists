/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(l1==NULL) return l2;
        if(l2==NULL) return l1;
        ListNode* a=NULL;
        ListNode* b=NULL;
        
        while(l1!=NULL && l2!=NULL)
        {
            if(l1->val<l2->val)
            {
                if(a==NULL)
                {
                    a=l1;
                    l1=l1->next;
                    a->next=NULL;
                    b=a;
                }
                
                else
                {
                    b->next=l1;
                    l1=l1->next;
                    b=b->next;
                    b->next=NULL;
                }
            }
            
            else
            {
                if(a==NULL)
                {
                    a=l2;
                    l2=l2->next;
                    a->next=NULL;
                    b=a;
                }
                
                else
                {
                    b->next=l2;
                    l2=l2->next;
                    b=b->next;
                    b->next=NULL;
                }
            }
        }
        
        
        if(l1==NULL)
        {
            b->next=l2;
            return a;
        }
        
        b->next=l1;
        return a;
    }
};
