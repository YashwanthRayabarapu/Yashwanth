class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        vector<int> result;
        unordered_map<int,int> freq;
        for(int i=0; i<nums.size(); i++)
        {
            freq[nums[i]]++;
        }
        
        priority_queue <int, vector<int>, greater<int>> minheap;
        for(auto i : freq)
        {
            minheap.push(i.second);
            if(minheap.size() > k){
                minheap.pop();
            }
        }
        for(auto i : freq)
         {
            if(i.second >= minheap.top()){
                result.push_back(i.first);
            }
        }
        return result;
    }
};
