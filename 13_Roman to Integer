class Solution {
public:
        int romanToInt(string s) {
            
        if(s.empty())
        {
            return 0;
        }
        unordered_map<char,int> mp{
            {'I',1}, {'V',5}, {'X',10}, {'L',50}, {'C',100}, {'D',500}, {'M',1000}
        };
    int digit=0;
        
    for(int i=0;i<s.size();)
    { 
        switch(s[i])
        {
            case 'I':
                {if(s[i+1] == 'V'){
                        digit += 4;
                        i=i+2;
                        }
                    else if(s[i+1] == 'X'){
                        digit += 9;
                        i=i+2;
                        }
                    else {
                        digit +=1;
                        i++;
                    }
                break;
				}
                
            case 'X':
                {if(s[i+1] == 'L'){
                        digit += 40;
                        i=i+2;
                        }
                    else if(s[i+1] == 'C'){
                        digit += 90;
                        i=i+2;
                        }
                    else {
                        digit +=10;
                        i++;
                    }
                break;
				}
                
            case 'C':
                { if(s[i+1] == 'D'){
                        digit += 400;
                        i=i+2;
                        }
                    else if(s[i+1] == 'M'){
                        digit += 900;
                        i=i+2;
                        }
                    else {
                        digit +=100;
                        i++;
                    }
                break;
				}
            default:{ 
                    digit += mp[s[i]];
                i++;
                break;
            }
        }
        
    }
        return digit;
    }
};
